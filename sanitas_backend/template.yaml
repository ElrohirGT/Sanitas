---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  sanitas_backend
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  PostgresURL:
    Type: String
    Default: 'postgresql://backend:backend@hostpc:6969/sanitas'
    Description: 'The Postgres DB URL to connect during lambdas execution'
    NoEcho: true

# More info about Globals:
# https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Tracing: Active
    # You can add LoggingConfig parameters such as the
    # Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel.
    # Learn more here
    # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
    Environment:
      Variables:
        POSTGRES_URL: !Ref PostgresURL
    Layers:
      - !Ref DBConnectionLayer
      - !Ref LambdaLoggingLayer
  Api:
    TracingEnabled: true

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  DBConnectionLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: sanitas-db-connection-layer
      Description: Layer for connecting to the DB
      CompatibleRuntimes:
        - nodejs20.x
      ContentUri: layers/db-conn
    Metadata:
      BuildMethod: nodejs20.x
  LambdaLoggingLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: sanitas-lambda-logging-layer
      Description: Layer for configuring the logging output of lambdas
      CompatibleRuntimes:
        - nodejs20.x
      ContentUri: layers/logging
    Metadata:
      BuildMethod: nodejs20.x
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code:
  # get-all-items.js
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/GetAllItems/get-all-items.getAllItemsHandler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items
        from a DynamoDB table.
      Environment:
        Variables:
          # Make table name accessible as environment variable from function
          # code during execution
          TEST_VAR: 1234
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  checkCuiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/CheckCui/check-cui.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Verifies if a CUI exists in the PostgreSQL database.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /check-cui/{cui}
            Method: GET
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code:
  # search-patient.js
  searchPatientFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/SearchPatient/search-patient.searchPatientHandler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Searches for a patient in the database with Carnet, CÃ³digo
        de Trabajador, or Nombre-Apellido.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /search-patient
            Method: POST
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      # yamllint disable-line rule:line-length
      !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
